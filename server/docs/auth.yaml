openapi: 3.0.1
info:
  title: 'API-Documentation-Mono-Assessment'
  description: "Femi Oluwatolas swagger documentation for the fullstack assessment."
  version: 1.0.0
tags:
  - name: user
    description: describes endpoints for users
paths:
  /auth/register/:
    post:
      tags:
        - user
      summary: Create new user
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/NewUser'
        required: true
      responses:
        201:
          description: created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 201 success status code
                    example: '201'
                  message:
                    type: string
                    description: status message
                    example: 'success'
                  data:
                    $ref: '#/components/schemas/CreatedUser'
        422:
          description: user already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 422 error status code
                    example: '422'
                  message:
                    type: string
                    description: status message
                    example: 'Email has already been registered'
        503:
          description: system errors and other user kinds of error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 503 error status code
                    example: '503'
                  message:
                    type: string
                    description: status message
                    example: 'Some error occurred'
  /auth/login/:
    post:
      tags:
        - user
      summary: Login user
      operationId: LoggededUser
      requestBody:
        description: Logged user object
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/LoggedUser'
        required: true
      responses:
        201:
          description: log in user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 201 success status code
                    example: '201'
                  message:
                    type: string
                    description: status message
                    example: 'success'
                  data:
                    $ref: '#/components/schemas/CreatedUser'
        401:
          description: Invalid username/password
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: 401 error status code
                    example: '401'
                  message:
                    type: string
                    description: status message
                    example: 'Invalid username password'  
  
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: auto generated by db
        firstname:
          type: string
          description: first name
        lastname:
          type: string
          description: last name
        email:
          type: string
        password:
          type: string
    NewUser:
      type: object
      required:
        - firstname
        - lastname
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
          format: password
        firstname:
          type: string
        lastname:
          type: string
    CreatedUser:
      type: object
      properties:
        _id:
          type: integer
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        accountsCount: 
          type: number
        isActive: 
          type: boolean
        token:
          type: string
      example:
        id: 1
        firstname: Oluwafemi
        lastname: Oluwatola
        email: oluwafemi.o@mono.com
        accountsCount: 0,
        isActive: true,

        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVlYjYwMzZjZGUxYzkzODJlNGY1MTMxMSIsImVtYWlsIjoibWVyY2llczEwMUBnbWFpbC5jb20iLCJyb2xlcyI6InVzZXIiLCJ1c2VyVHlwZSI6ImJ1eWVyIiwiaWF0IjoxNTg4OTg2NzMyLCJleHAiOjE1OTc2MjY3MzJ9.Tz-wWYSDzMIb-hAfIG5Y0WH_nBv05A4ms4on2jR4S2c
    LoggedUser:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: oluwafemi.o@mono.com
        password: Qwerty12345